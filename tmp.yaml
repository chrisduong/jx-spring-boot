buildPack: maven
pipelineConfig:
  agent:
    image: maven
    label: jenkins-maven
  extends:
    file: maven/pipeline.yaml
    import: classic
  pipelines:
    post: {}
    pullRequest:
      pipeline:
        options:
          containerOptions:
            env:
              - name: DOCKER_REGISTRY
                valueFrom:
                  configMapKeyRef:
                    key: docker.registry
                    name: jenkins-x-docker-registry
              - name: TILLER_NAMESPACE
                value: kube-system
              - name: DOCKER_CONFIG
                value: /home/jenkins/.docker/
              - name: GIT_AUTHOR_EMAIL
                value: jenkins-x@googlegroups.com
              - name: GIT_AUTHOR_NAME
                value: jenkins-x-bot
              - name: GIT_COMMITTER_EMAIL
                value: jenkins-x@googlegroups.com
              - name: GIT_COMMITTER_NAME
                value: jenkins-x-bot
              - name: JENKINS_URL
                value: http://jenkins:8080
              - name: MAVEN_OPTS
                value: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
              - name: XDG_CONFIG_HOME
                value: /home/jenkins
              - name: _JAVA_OPTIONS
                value:
                  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
                  -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5
                  -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
                  -Xms10m -Xmx192m
            name: ""
            resources:
              requests:
                cpu: 400m
                memory: 512Mi
            securityContext:
              privileged: true
            volumeMounts:
              - mountPath: /home/jenkins
                name: workspace-volume
              - mountPath: /var/run/docker.sock
                name: docker-daemon
              - mountPath: /root/.m2/
                name: volume-0
              - mountPath: /home/jenkins/.docker
                name: volume-1
              - mountPath: /home/jenkins/.gnupg
                name: volume-2
        stages:
          - agent:
              image: maven
            name: from-build-pack
            steps:
              - command: mvn versions:set -DnewVersion=$PREVIEW_VERSION
                dir: /workspace/source
                image: maven
                name: build-set-version
              - command: mvn install
                dir: /workspace/source
                image: maven
                name: build-mvn-install
              - command: skaffold version
                dir: /workspace/source
                image: maven
                name: build-skaffold-version
              - args:
                  - --cache=true
                  - --cache-dir=/workspace
                  - --context=/workspace/source
                  - --dockerfile=/workspace/source/Dockerfile
                  - --destination=046149402026.dkr.ecr.ap-southeast-1.amazonaws.com/chrisduong/jx-spring-boot:${inputs.params.version}
                  - --cache-repo=046149402026.dkr.ecr.ap-southeast-1.amazonaws.com/todo/cache
                  - --skip-tls-verify-registry=046149402026.dkr.ecr.ap-southeast-1.amazonaws.com
                command: /kaniko/executor
                dir: /workspace/source
                image: gcr.io/kaniko-project/executor:9912ccbf8d22bbafbf971124600fbb0b13b9cbd6
                name: build-container-build
              - command: jx step post build --image $DOCKER_REGISTRY/$ORG/$APP_NAME:$PREVIEW_VERSION
                dir: /workspace/source
                image: maven
                name: postbuild-post-build
              - command: make preview
                dir: /workspace/source/charts/preview
                image: maven
                name: promote-make-preview
              - command: jx preview --app $APP_NAME --dir ../..
                dir: /workspace/source/charts/preview
                image: maven
                name: promote-jx-preview
    release:
      pipeline:
        options:
          containerOptions:
            env:
              - name: DOCKER_REGISTRY
                valueFrom:
                  configMapKeyRef:
                    key: docker.registry
                    name: jenkins-x-docker-registry
              - name: TILLER_NAMESPACE
                value: kube-system
              - name: DOCKER_CONFIG
                value: /home/jenkins/.docker/
              - name: GIT_AUTHOR_EMAIL
                value: jenkins-x@googlegroups.com
              - name: GIT_AUTHOR_NAME
                value: jenkins-x-bot
              - name: GIT_COMMITTER_EMAIL
                value: jenkins-x@googlegroups.com
              - name: GIT_COMMITTER_NAME
                value: jenkins-x-bot
              - name: JENKINS_URL
                value: http://jenkins:8080
              - name: MAVEN_OPTS
                value: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
              - name: XDG_CONFIG_HOME
                value: /home/jenkins
              - name: _JAVA_OPTIONS
                value:
                  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
                  -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5
                  -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
                  -Xms10m -Xmx192m
            name: ""
            resources:
              requests:
                cpu: 400m
                memory: 512Mi
            securityContext:
              privileged: true
            volumeMounts:
              - mountPath: /home/jenkins
                name: workspace-volume
              - mountPath: /var/run/docker.sock
                name: docker-daemon
              - mountPath: /root/.m2/
                name: volume-0
              - mountPath: /home/jenkins/.docker
                name: volume-1
              - mountPath: /home/jenkins/.gnupg
                name: volume-2
        stages:
          - agent:
              image: maven
            name: from-build-pack
            steps:
              - command: jx step git credentials
                dir: /workspace/source
                image: maven
                name: setup-jx-git-credentials
              - command: mvn clean deploy
                dir: /workspace/source
                image: maven
                name: build-mvn-deploy
              - command: skaffold version
                dir: /workspace/source
                image: maven
                name: build-skaffold-version
              - args:
                  - --cache=true
                  - --cache-dir=/workspace
                  - --context=/workspace/source
                  - --dockerfile=/workspace/source/Dockerfile
                  - --destination=046149402026.dkr.ecr.ap-southeast-1.amazonaws.com/chrisduong/jx-spring-boot:${inputs.params.version}
                  - --cache-repo=046149402026.dkr.ecr.ap-southeast-1.amazonaws.com/todo/cache
                  - --skip-tls-verify-registry=046149402026.dkr.ecr.ap-southeast-1.amazonaws.com
                command: /kaniko/executor
                dir: /workspace/source
                image: gcr.io/kaniko-project/executor:9912ccbf8d22bbafbf971124600fbb0b13b9cbd6
                name: build-container-build
              - command: jx step post build --image $DOCKER_REGISTRY/$ORG/$APP_NAME:${VERSION}
                dir: /workspace/source
                image: maven
                name: build-post-build
              - command: jx step changelog --version v${VERSION}
                dir: /workspace/source/charts/jx-spring-boot
                image: maven
                name: promote-changelog
              - command: jx step helm release
                dir: /workspace/source/charts/jx-spring-boot
                image: maven
                name: promote-helm-release
              - command: jx promote -b --all-auto --timeout 1h --version ${VERSION}
                dir: /workspace/source/charts/jx-spring-boot
                image: maven
                name: promote-jx-promote
      setVersion:
        steps:
          - image: maven
            steps:
              - comment: so we can retrieve the version in later steps
                name: next-version
                sh: echo \$(jx-release-version) > VERSION
              - name: set-version
                sh: mvn versions:set -DnewVersion=\$(cat VERSION)
              - name: tag-version
                sh: jx step tag --version \$(cat VERSION)
